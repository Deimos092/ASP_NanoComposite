@model WebApplication1.Models.Composite

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AddComposite</title>
    <script data-require="jquery" data-semver="2.1.4" src="http://code.jquery.com/jquery-2.1.4.min.js"></script>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <h4>Composite</h4>
        <hr />
        <div class="col-md-12">
            <div class="col-sm-6" style="overflow: auto">
                <table id="userTable" class="table table-hover">
                    <tbody>
                        <tr><th>Название</th><th>Плот.</th><th>Эластич.</th><th>Тверд.</th><th>Теплоем.</th><th>Пред. силы</th><th>Теплопровод.</th><th>Тепл. расшир</th><th>M%/V%</th><th>М</th><th>%</th></tr>
                        @foreach (var c in Model.UsedMaterials)
                        {
                            <tr>

                                <th scope="row">@c.Material.Name</th>
                                <td class="idCol" hidden="hidden">@c.Material.MaterialID</td>
                                <td>@c.Material.Density</td>
                                <td>@c.Material.Elasticity</td>
                                <td>@c.Material.Hardness</td>
                                <td>@c.Material.HeatCapacity</td>
                                <td>@c.Material.StrengthBeyond</td>
                                <td>@c.Material.ThermalConduct</td>
                                <td>@c.Material.ThermalExpansion</td>
                                <td class="isMassPercentCol"><input type="checkbox" class="checkbox" @(c.isMassPercent ? "checked=checked" : "")></td>
                                <td class="isMatrixCol"><input type="checkbox" class="checkbox" @(c.isMatrix ? "checked=checked" : "")></td>
                                <td class="PercentCol">@c.Percent</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-sm-1 sampleOne">
                <a class="btn btn-default" style="width:100%" href="#" role="button" id="Add"><</a>
                <a class="btn btn-default" style="width:100%" href="#" role="button" id="Remove">></a>
                <input type="text" style="width:100%" class="focusify-enable form-control" id="percent" placeholder="100%">
            </div>
            <div class="col-sm-5" style="overflow: auto; height:500px; max-height:fit-content">
                <table id="userTable1" class="table table-hover">
                    <tbody>
                        <tr><th>Название</th><th>Плот.</th><th>Эластич.</th><th>Тверд.</th><th>Теплоем.</th><th>Пред. силы</th><th>Теплопровод.</th><th>Тепл. расшир</th></tr>
                        @using (WebApplication1.Models.ApplicationDbContext c = new WebApplication1.Models.ApplicationDbContext())
                        {
                            int t = ViewBag.ProjectId;
                            var owner = c.Projects.Where(x => x.ProjectID == t).First().Owner.Id;
                            var list = c.Shares.Where(w => w.ProjectToShare.ProjectID == t).ToList();
                            foreach (var share in list)
                            {
                                foreach (var m in c.Materials.Where(m => m.Owner.Id == owner || m.Owner.Id == share.Shared.Id))
                                {
                                    if (!Model.UsedMaterials.Any(u => u.Material.MaterialID == m.MaterialID))
                                    {
                                        <tr>
                                            <th scope="row">@m.Name</th>
                                            <td class="idCol" hidden="hidden">@m.MaterialID</td>
                                            <td>@m.Density</td>
                                            <td>@m.Elasticity</td>
                                            <td>@m.Hardness</td>
                                            <td>@m.HeatCapacity</td>
                                            <td>@m.StrengthBeyond</td>
                                            <td>@m.ThermalConduct</td>
                                            <td>@m.ThermalExpansion</td>
                                            <td hidden="hidden" class="isMassPercentCol"><input type="checkbox" class="checkbox" /></td>
                                            <td hidden="hidden" class="isMatrixCol"><input type="checkbox" class="checkbox" /></td>
                                            <td hidden="hidden" class="PercentCol"><input type="checkbox" class="checkbox" /></td>
                                        </tr>
                                    }
                                }
                            }
                        }
                    </tbody>
                </table>
                <script src="~/Scripts/focusify.js"></script>
                
                <script>
                    var obj = new Object();
                    obj.ids = [];
                    obj.p = [];
                    var string = JSON.stringify(obj);
                    $('#userTable').on('click', 'tbody tr', function (event) {
                        $(this).addClass('selected').siblings().removeClass('selected');
                        $('#userTable1 .selected').removeClass('selected');
                    });
                    $('#userTable1').on('click', 'tbody tr', function (event) {
                        $(this).addClass('selected').siblings().removeClass('selected');
                        $('#userTable .selected').removeClass('selected');
                    });
                    var current = $(".sampleOne").find('.focusify-enable').css('border');
                    $('#Add').on('click', '', function (event) {
                        if (isNaN(parseFloat($("#percent").val()))) {
                            $(".sampleOne").find('.focusify-disable').fadeTo("fast", 0.3).addClass('focusedDisable');
                            
                            $(".sampleOne").find('.focusify-enable').css('border', '2px solid ' + "#ff0000").addClass('focusedEnable');
                            setTimeout(function () {
                                $('.focusedDisable').fadeTo("fast", 1);
                                $('.focusedEnable').css('border', current);
                                $(".sampleOne").find('.focusify-disable').removeClass('focusedDisable');
                                $(".sampleOne").find('.focusify-enable').removeClass('focusedEnable');
                            }, 100);
                        } else {
                            var tr = $('#userTable1 .selected').closest("tr").remove().clone();
                            tr.find(".isMassPercentCol").removeAttr("hidden");
                            tr.find(".isMatrixCol").removeAttr("hidden");
                            tr.find(".PercentCol").removeAttr("hidden");
                            tr.find(".PercentCol").html(parseFloat($("#percent").val()).toFixed(2));
                            $('#userTable').append(tr);
                        }
                    });
                    $('#Remove').on('click', '', function (event) {
                        var tr = $('#userTable .selected').closest("tr").remove().clone();
                        tr.find(".isMassPercentCol").attr("hidden", "hidden");
                        tr.find(".isMatrixCol").attr("hidden", "hidden");
                        tr.find(".PercentCol").attr("hidden", "hidden");
                        $('#userTable1').append(tr);
                    });
                </script>
            </div>
        </div>

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Porosity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Porosity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Porosity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Elasticity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Elasticity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Elasticity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Hardness, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Hardness, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Hardness, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FactorKogezia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FactorKogezia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FactorKogezia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Strength, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Strength, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Strength, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ThermalConduct, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ThermalConduct, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ThermalConduct, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="hidden" id="json" name="json" value="test123" /> 
                    <input type="submit" id="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
            <script>
                $(function () {
                    $("#submit").click(function (e) {
                        var sum = 0;
                        $('#userTable > tbody > tr').find(".PercentCol").each(function () {
                            sum += parseFloat($(this).html());
                        });
                        if (sum != 100) {
                            alert("Неверные проценты");
                            e.preventDefault();
                        }
                        var array = [];
                        $('#userTable > tbody').find("tr").each(function () {
                            var material = {
                                id: $(this).find(".idCol").html(),
                                percent: $(this).find(".PercentCol").html().replace(",","."),
                                isMassPercent: $(this).find(".isMassPercentCol > .checkbox").prop("checked"),
                                isMatrix: $(this).find(".isMatrixCol > .checkbox").prop("checked")
                            };
                            array.push(material);
                        });
                        $("#json").val(JSON.stringify(array));
                    }
                    );
                });
            </script>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
